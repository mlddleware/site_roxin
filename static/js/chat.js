console.log("–ó–∞–≥—Ä—É–∑–∫–∞ chat.js...");

// –ï–¥–∏–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ WebSocket
let socket;
let currentChatUserId = null;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
let activeRequest = null;
let lastSelectedUserId = null;
let currentUserName = null; // –ò–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–≤–æ–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤
let currentReplyTo = null; // ID —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—á–∞–µ–º
let messageIdCounter = 1; // –°—á–µ—Ç—á–∏–∫ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID —Å–æ–æ–±—â–µ–Ω–∏–π

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ HTML (–∑–∞—â–∏—Ç–∞ –æ—Ç XSS)
function sanitizeHTML(text) {
    if (!text) return '';
    return text.toString()
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#039;');
}

// –§—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑–≤–Ω–µ DOMContentLoaded
let openChatByIdImpl = null;

function openChatById(chatId) {
    if (openChatByIdImpl) {
        openChatByIdImpl(chatId);
    } else {
        // –ï—Å–ª–∏ DOM –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è
        window.pendingChatId = chatId;
    }
}

// –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫—ç—à —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–µ–º –∂–∏–∑–Ω–∏
const chatCache = {
    data: {},
    maxAge: {
        messages: 30000,    // 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
        user: 300000,       // 5 –º–∏–Ω—É—Ç –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        chatId: 3600000     // 1 —á–∞—Å –¥–ª—è ID —á–∞—Ç–æ–≤
    },
    
    get(key) {
        const item = this.data[key];
        if (!item) return null;
        if (Date.now() - item.timestamp > this.getMaxAge(key)) {
            delete this.data[key];
            return null;
        }
        return item.value;
    },
    
    set(key, value) {
        this.data[key] = {
            value,
            timestamp: Date.now()
        };
    },
    
    getMaxAge(key) {
        if (key.startsWith('messages_')) return this.maxAge.messages;
        if (key.startsWith('userData_')) return this.maxAge.user;
        if (key.startsWith('chatId_')) return this.maxAge.chatId;
        return this.maxAge.messages;
    },
    
    invalidate(key) {
        delete this.data[key];
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–∫–µ—Ç–∞
if (typeof io === "undefined") {
    console.error("‚ùå –û—à–∏–±–∫–∞: io() –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω! –ü—Ä–æ–≤–µ—Ä—å –∑–∞–≥—Ä—É–∑–∫—É socket.io.js.");
} else {
    socket = io(window.location.origin, { transports: ["websocket"] });
    
    socket.on("connect", () => {
        console.log("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket!");
    });

    socket.on("disconnect", () => {
        console.log("‚ùå WebSocket –æ—Ç–∫–ª—é—á—ë–Ω!");
    });
}

// –§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function requestNotificationSound() {
    const audio = new Audio("/static/sounds/notification.mp3");

    if (document.hidden) {
        document.addEventListener("visibilitychange", () => {
            if (!document.hidden) {
                audio.play().catch(error => console.warn("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:", error));
            }
        }, { once: true });
    } else {
        audio.play().catch(error => console.warn("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:", error));
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è openChatById
window.addEventListener('openChatById', function(e) {
    const chatId = e.detail.chatId;
    if (chatId) {
        openChatById(chatId);
    }
});

document.addEventListener("DOMContentLoaded", () => {
    const pathParts = window.location.pathname.split("/");
    const chatListElement = document.getElementById("chatList");
    const messagesContainer = document.getElementById("messagesContainer");
    const messageInput = document.getElementById("messageInput");
    const sendMessageBtn = document.getElementById("sendMessageBtn");
    const userInfo = document.getElementById("userInfo");
    const profileName = document.getElementById("profileName");
    const profileAvatar = document.getElementById("profileAvatar");
    const activeChatTitle = document.getElementById("activeChatTitle");
    const chatAvatar = document.getElementById("chatAvatar");
    const mainChat = document.getElementById("mainChat");
    const sidebar = document.getElementById("sidebar");
    const profileSidebar = document.getElementById("profileSidebar");
    const messageInputContainer = document.querySelector(".message-input");
    
    // –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    const showChats = document.getElementById("showChats");
    const showMessages = document.getElementById("showMessages");
    const showProfile = document.getElementById("showProfile");
    const backButton = document.getElementById("backButton");

    // –†–µ–∞–ª–∏–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é openChatById
    openChatByIdImpl = function(chatId) {
        fetch(`/chat/info/${chatId}`)
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞: ${data.error}`);
                window.history.pushState({}, "", "/chat"); // –ï—Å–ª–∏ —á–∞—Ç–∞ –Ω–µ—Ç ‚Äî —Ä–µ–¥–∏—Ä–µ–∫—Ç
                return;
            }
    
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º UI —á–∞—Ç–∞
            mainChat.classList.add('active');
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            messageInputContainer.classList.add('active');
            
            // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            if (window.innerWidth >= 768) {
                profileSidebar.classList.add('active');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∞–≤–∞—Ç–∞—Ä –∏ —Å—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω
            activeChatTitle.textContent = data.username;
            if (chatAvatar) {
                chatAvatar.src = data.avatar || "/static/images/user.png";
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω
            const onlineStatus = document.querySelector('.online-status');
            if (onlineStatus) {
                onlineStatus.textContent = data.online_status;
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –æ–Ω–ª–∞–π–Ω-—Å—Ç–∞—Ç—É—Å–∞
                if (data.online_status === "–û–Ω–ª–∞–π–Ω") {
                    onlineStatus.classList.add('status-online');
                } else {
                    onlineStatus.classList.remove('status-online');
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
            profileName.textContent = data.username;
            profileAvatar.src = data.avatar || "/static/images/user.png";
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫—ç—à
            chatCache.set(`userData_${data.user_id}`, data);
    
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            loadChatMessages(data.user_id);
    
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            userInfo.innerHTML = `<p>–ò–º—è: ${data.username}</p>
                                 <p>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${formatDate(data.created_at)}</p>
                                 <p>${data.online_status}</p>`;
    
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π ID —á–∞—Ç–∞
            currentChatUserId = data.user_id;
            lastSelectedUserId = data.user_id;
        })
        .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞:", error));
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞ –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    if (window.pendingChatId) {
        openChatById(window.pendingChatId);
        window.pendingChatId = null;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    fetch('/profile/info')
        .then(response => response.json())
        .then(data => {
            if (data.username) {
                currentUserName = data.username;
            }
        })
        .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error));

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –Ω–∞ –Ω–∞–ª–∏—á–∏–µ chat_id
    if (pathParts.length === 3 && pathParts[1] === "chat") {
        const chatId = parseInt(pathParts[2], 10);
        if (!isNaN(chatId)) {
            openChatById(chatId);
        }
    }

    function showWelcomeMessage() {
        messagesContainer.innerHTML = `
            <div class="welcome-message">
                <div class="welcome-icon">
                    <i class="fas fa-comments"></i>
                </div>
                <h3>–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ª–æ–≥</h3>
                <p>–£–≤–µ—Ä–µ–Ω—ã, —É –≤–∞—Å –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è</p>
            </div>
        `;
    }
    
    showWelcomeMessage();
    
    function loadChatList() {
        fetch("/chat/list")
            .then(response => response.json())
            .then(chats => {
                chatListElement.innerHTML = "";
                chats.forEach(chat => {
                    const listItem = document.createElement("li");
                    listItem.setAttribute("data-user-id", chat.user_id);

                    const avatarImg = document.createElement("img");
                    avatarImg.src = chat.avatar;
                    avatarImg.alt = "–ê–≤–∞—Ç–∞—Ä";
                    avatarImg.classList.add("chat-avatar");

                    const textContainer = document.createElement("div");
                    textContainer.classList.add("chat-text");
                    
                    // –í—Ä–µ–º—è –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
                    const timeElement = document.createElement("span");
                    timeElement.classList.add("last-message-time");
                    timeElement.textContent = chat.last_message_date;

                    textContainer.innerHTML = `
                        <b>${chat.username}</b>
                        <span class="last-message">${chat.last_message || "–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π"}</span>
                    `;

                    listItem.appendChild(avatarImg);
                    listItem.appendChild(textContainer);
                    listItem.appendChild(timeElement);
                    listItem.addEventListener("click", () => {
                        selectChat(chat.user_id, chat.username, chat.avatar);
                        
                        // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —á–∞—Ç
                        if (window.innerWidth < 768) {
                            sidebar.classList.remove('active');
                            mainChat.classList.add('active');
                            profileSidebar.classList.remove('active');
                            updateActiveNav(showMessages);
                        }
                    });

                    chatListElement.appendChild(listItem);
                });
                
                // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–æ–≤, –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
                if (chats.length > 0 && !currentChatUserId) {
                    prefetchFirstChats(chats);
                }
            });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    function updateActiveNav(activeButton) {
        if (showChats && showMessages && showProfile) {
            [showChats, showMessages, showProfile].forEach(btn => {
                btn.classList.remove('active');
            });
            activeButton.classList.add('active');
        }
    }
    
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–≤—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    function prefetchFirstChats(chats) {
        const prefetchCount = Math.min(3, chats.length);
        for (let i = 0; i < prefetchCount; i++) {
            prefetchChatData(chats[i].user_id);
        }
    }
    
    function selectChat(userId, username, avatar) {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–ª–∏–∫–∏ –Ω–∞ —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userId === lastSelectedUserId) {
            return;
        }
        lastSelectedUserId = userId;
    
        // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –µ—Å–ª–∏ –µ—Å—Ç—å
        if (activeRequest) {
            activeRequest.abort();
            activeRequest = null;
        }
    
        currentChatUserId = userId;
    
        // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        messagesContainer.innerHTML = '';
    
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∞–≤–∞—Ç–∞—Ä—ã
        activeChatTitle.textContent = username;
        if (chatAvatar) {
            chatAvatar.src = avatar || "/static/images/user.png";
        }
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        messageInputContainer.classList.add('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
        profileName.textContent = username;
        profileAvatar.src = avatar || "/static/images/user.png";
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω –∏–∑ –∫–µ—à–∞ –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        const onlineStatus = document.querySelector('.online-status');
        if (onlineStatus) {
            const cachedUserData = chatCache.get(`userData_${userId}`);
            if (cachedUserData && cachedUserData.online_status) {
                onlineStatus.textContent = cachedUserData.online_status;
                if (cachedUserData.online_status === "–û–Ω–ª–∞–π–Ω") {
                    onlineStatus.classList.add('status-online');
                } else {
                    onlineStatus.classList.remove('status-online');
                }
            } else {
                onlineStatus.textContent = "–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...";
                onlineStatus.classList.remove('status-online');
            }
        }
        
        // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        if (window.innerWidth >= 768) {
            profileSidebar.classList.add('active');
            
            // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∏–¥–Ω—ã (–∏—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π)
            setTimeout(() => {
                scrollToBottom();
            }, 100);
        }
    
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const cachedMessages = chatCache.get(`messages_${userId}`);
        if (cachedMessages) {
            // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            messagesContainer.innerHTML = "";
            cachedMessages.forEach(msg => {
                appendMessage(
                    msg.sender, 
                    msg.message, 
                    msg.timestamp, 
                    msg.reply_to,
                    msg.message_id
                );
            });
            scrollToBottom();
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
            messagesContainer.innerHTML = `<div class="loading-placeholder">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...</div>`;
        }
    
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –∫—ç—à–µ
        const cachedUserData = chatCache.get(`userData_${userId}`);
        if (cachedUserData) {
            userInfo.innerHTML = `
                <p>–ò–º—è: ${cachedUserData.username}</p>
                <p>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${formatDate(cachedUserData.created_at)}</p>
                <p>${cachedUserData.online_status || "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"}</p>
            `;
        } else {
            userInfo.innerHTML = `<p class="loading-placeholder">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>`;
        }
    
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤
        Promise.all([
            optimizedFetch(`/chat/get_chat_id/${userId}`, `chatId_${userId}`),
            optimizedFetch(`/chat/user/${userId}`, `userData_${userId}`),
            optimizedFetch(`/chat/messages/${userId}`, `messages_${userId}`, !cachedMessages)
        ])
        .then(([chatIdData, userData, messages]) => {
            // –û–±–Ω–æ–≤–ª—è–µ–º URL —á–∞—Ç–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            if (currentChatUserId === userId && chatIdData.chat_id) {
                window.history.pushState({}, "", `/chat/${chatIdData.chat_id}`);
            }
    
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            if (currentChatUserId === userId) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                activeChatTitle.textContent = userData.username;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω
                if (onlineStatus) {
                    onlineStatus.textContent = userData.online_status || "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω";
                    if (userData.online_status === "–û–Ω–ª–∞–π–Ω") {
                        onlineStatus.classList.add('status-online');
                    } else {
                        onlineStatus.classList.remove('status-online');
                    }
                }
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                messagesContainer.innerHTML = "";
                messages.forEach(msg => {
                    appendMessage(
                        msg.sender, 
                        msg.message, 
                        msg.timestamp, 
                        msg.reply_to,
                        msg.message_id
                    );
                });
                scrollToBottom();
    
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                userInfo.innerHTML = `
                    <p>–ò–º—è: ${userData.username}</p>
                    <p>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${formatDate(userData.created_at)}</p>
                    <p>${userData.online_status || "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"}</p>
                `;
                
                // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å–µ–¥–Ω–∏—Ö —á–∞—Ç–æ–≤ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
                setTimeout(() => prefetchNearbyChatData(), 300);
            }
        })
        .catch(error => {
            if (error.name !== 'AbortError' && currentChatUserId === userId) {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞:", error);
                messagesContainer.innerHTML = `<div class="error-message">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</div>`;
            }
        });
    }

    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫—ç—à–∞
    function optimizedFetch(url, cacheKey, forceRefresh = false) {
        if (!forceRefresh) {
            const cachedData = chatCache.get(cacheKey);
            if (cachedData) {
                return Promise.resolve(cachedData);
            }
        }

        const controller = new AbortController();
        activeRequest = controller;

        return fetch(url, { signal: controller.signal })
            .then(response => response.json())
            .then(data => {
                chatCache.set(cacheKey, data);
                activeRequest = null;
                return data;
            })
            .catch(error => {
                if (error.name !== 'AbortError') {
                    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error);
                }
                activeRequest = null;
                throw error;
            });
    }

    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö —á–∞—Ç–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    function prefetchNearbyChatData() {
        const chatItems = document.querySelectorAll("#chatList li");
        let currentIndex = -1;
        
        // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç –≤ —Å–ø–∏—Å–∫–µ
        chatItems.forEach((item, index) => {
            if (parseInt(item.getAttribute("data-user-id")) === currentChatUserId) {
                currentIndex = index;
            }
        });
        
        if (currentIndex !== -1) {
            // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º 2 —á–∞—Ç–∞ –¥–æ –∏ 2 –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ
            for (let i = 1; i <= 2; i++) {
                // –°–ª–µ–¥—É—é—â–∏–µ —á–∞—Ç—ã
                if (currentIndex + i < chatItems.length) {
                    const nextId = parseInt(chatItems[currentIndex + i].getAttribute("data-user-id"));
                    prefetchChatData(nextId);
                }
                
                // –ü—Ä–µ–¥—ã–¥—É—â–∏–µ —á–∞—Ç—ã
                if (currentIndex - i >= 0) {
                    const prevId = parseInt(chatItems[currentIndex - i].getAttribute("data-user-id"));
                    prefetchChatData(prevId);
                }
            }
        }
    }

    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞
    function prefetchChatData(userId) {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ—Ç –≤ –∫—ç—à–µ, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö
        if (!chatCache.get(`userData_${userId}`)) {
            fetch(`/chat/user/${userId}`)
                .then(response => response.json())
                .then(data => {
                    chatCache.set(`userData_${userId}`, data);
                })
                .catch(() => {});
        }
        
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º ID —á–∞—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        if (!chatCache.get(`chatId_${userId}`)) {
            fetch(`/chat/get_chat_id/${userId}`)
                .then(response => response.json())
                .then(data => {
                    chatCache.set(`chatId_${userId}`, data);
                })
                .catch(() => {});
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    function loadChatMessages(userId) {
        return fetch(`/chat/messages/${userId}`)
            .then(response => response.json())
            .then(messages => {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
                chatCache.set(`messages_${userId}`, messages);
                
                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
                if (currentChatUserId === userId) {
                    messagesContainer.innerHTML = "";
                    
                    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ timestamp, —á—Ç–æ–±—ã –æ–Ω–∏ —à–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
                    messages.sort((a, b) => {
                        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –≤ –æ–±—ä–µ–∫—Ç—ã Date –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                        const dateA = new Date(a.timestamp);
                        const dateB = new Date(b.timestamp);
                        return dateA - dateB; // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)
                    });
                    
                    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
                    messages.forEach(msg => {
                        appendMessage(
                            msg.sender, 
                            msg.message, 
                            msg.timestamp, 
                            msg.reply_to,
                            msg.message_id
                        );
                    });
                    
                    scrollToBottom();
                }
            })
            .catch(error => {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:", error);
            });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    function handleNewMessage(data) {
        const currentUserId = parseInt(document.cookie.replace(/(?:(?:^|.*;\s*)user_id\s*=\s*([^;]*).*$)|^.*$/, "$1"));
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (data.recipient_id === currentUserId) {
            requestNotificationSound();
        }
        
        // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ç–µ–∫—É—â–µ–º—É —á–∞—Ç—É - –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ
        if (data.recipient_id === currentChatUserId || data.sender_id === currentChatUserId) {
            // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫—ç—à —Å–æ–æ–±—â–µ–Ω–∏–π
            chatCache.invalidate(`messages_${currentChatUserId}`);
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç–≤–µ—Ç–æ–≤
            appendMessage(
                data.sender, 
                data.message, 
                new Date().toISOString(), 
                data.reply_to,
                data.message_id
            );
            scrollToBottom();
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
        updateChatList(data.sender_id, data.recipient_id, data.message);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    function appendMessage(sender, text, timestamp, replyTo = null, messageId = null) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º ID
        if (messageId) {
            const existingMessage = document.querySelector(`[data-message-id="${messageId}"]`);
            if (existingMessage) {
                // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
                existingMessage.remove();
            }
        }
        
        // –ï—Å–ª–∏ ID –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π
        if (!messageId) {
            messageId = `msg_${Date.now()}_${messageIdCounter++}`;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —á–∞—Ç–∞
        const chatRecipientName = document.getElementById("activeChatTitle").textContent;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–µ) –∏–ª–∏ –æ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
        const isSentByMe = sender !== chatRecipientName;
        
        const messageElement = document.createElement("div");
        messageElement.classList.add("message");
        messageElement.classList.add(isSentByMe ? "sent" : "received");
        messageElement.setAttribute("data-message-id", messageId);
        messageElement.setAttribute("data-sender", sender);
        messageElement.setAttribute("data-timestamp", timestamp); // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç —Å –≤—Ä–µ–º–µ–Ω–µ–º –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –≤–∏–¥–µ –¥–ª—è –∞—Ç—Ä–∏–±—É—Ç–∞
        const shortText = text.replace(/"/g, '&quot;').substring(0, 100);
        messageElement.setAttribute("data-text", shortText);

        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        const messageActions = document.createElement("div");
        messageActions.classList.add("message-actions");
        messageActions.innerHTML = `
            <button class="reply-btn" title="–û—Ç–≤–µ—Ç–∏—Ç—å">
                <i class="fas fa-reply"></i>
            </button>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–≤–µ—Ç–∞
        messageElement.appendChild(messageActions);
        
        // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        const replyBtn = messageActions.querySelector(".reply-btn");
        replyBtn.addEventListener("click", () => {
            setReplyTo(messageId, sender, text);
        });

        const messageHeader = document.createElement("div");
        messageHeader.classList.add("message-header");

        const senderElement = document.createElement("div");
        senderElement.classList.add("sender");
        senderElement.textContent = sanitizeHTML(sender);

        const timestampElement = document.createElement("div");
        timestampElement.classList.add("timestamp");
        timestampElement.textContent = formatDateTime(timestamp);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –¥—Ä—É–≥–æ–µ
        if (replyTo) {
            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –æ—Ç–≤–µ—Ç–∞
            const replyElement = document.createElement("div");
            replyElement.classList.add("reply-to");
            
            // –ü–æ–∏—Å–∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            const originalMsg = document.querySelector(`[data-message-id="${replyTo.id}"]`);
            
            // –ï—Å–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞—Å—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            if (originalMsg) {
                const isOriginalFromMe = originalMsg.classList.contains("sent");
                replyElement.classList.add(isOriginalFromMe ? "reply-sent" : "reply-received");
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
                replyElement.style.cursor = "pointer";
                replyElement.addEventListener("click", () => {
                    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∏ –¥–µ–ª–∞–µ–º –µ–≥–æ –∑–∞–º–µ—Ç–Ω—ã–º
                    originalMsg.scrollIntoView({ behavior: "smooth", block: "center" });
                    originalMsg.classList.add("highlighted");
                    setTimeout(() => {
                        originalMsg.classList.remove("highlighted");
                    }, 2000);
                });
            } else {
                // –ï—Å–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—é
                // –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–≤—è–∑–∏
                replyElement.classList.add("reply-orphaned");
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                replyElement.title = "–ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ";
            }
            
            replyElement.innerHTML = `
                <div class="reply-sender">${sanitizeHTML(replyTo.sender)}</div>
                <div class="reply-text">${sanitizeHTML(replyTo.text).substr(0, 50)}${replyTo.text.length > 50 ? '...' : ''}</div>
            `;
            
            messageElement.appendChild(replyElement);
        }

        const textElement = document.createElement("div");
        textElement.classList.add("text");
        
        // –û—á–∏—Å—Ç–∫–∞ –æ—Ç XSS –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
        const sanitizedText = sanitizeHTML(text);
        textElement.innerHTML = sanitizedText.replace(/\n/g, '<br>');

        messageHeader.appendChild(senderElement);
        messageHeader.appendChild(timestampElement);

        messageElement.appendChild(messageHeader);
        messageElement.appendChild(textElement);

        messagesContainer.appendChild(messageElement);
        
        return messageId;
    }

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∂–∏–º–∞ –æ—Ç–≤–µ—Ç–∞
function setReplyTo(messageId, sender, text) {
    currentReplyTo = {
        id: messageId,
        sender: sender,
        text: text
    };
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ç–≤–µ—Ç–µ
    const replyContainer = document.createElement("div");
    replyContainer.id = "replyContainer";
    replyContainer.classList.add("reply-container");
    
    replyContainer.innerHTML = `
        <div class="reply-preview">
            <div class="reply-info">
                <span class="reply-to-sender">${sanitizeHTML(sender)}</span>
                <span class="reply-to-text">${sanitizeHTML(text).substr(0, 30)}${text.length > 30 ? '...' : ''}</span>
            </div>
            <button class="cancel-reply" title="–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `;
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç–≤–µ—Ç–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const existingReplyContainer = document.getElementById("replyContainer");
    if (existingReplyContainer) {
        existingReplyContainer.remove();
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –Ω–∏–º –±–ª–æ–∫ –æ—Ç–≤–µ—Ç–∞
    const messageInputContainer = document.querySelector(".message-input");
    messageInputContainer.prepend(replyContainer);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–≤–µ—Ç–∞
    const cancelReplyBtn = replyContainer.querySelector(".cancel-reply");
    cancelReplyBtn.addEventListener("click", cancelReply);
    
    // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    document.getElementById("messageInput").focus();
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ–Ω—ã –æ—Ç–≤–µ—Ç–∞
function cancelReply() {
    currentReplyTo = null;
    const replyContainer = document.getElementById("replyContainer");
    if (replyContainer) {
        replyContainer.remove();
    }
}

// Debounce —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö –≤—ã–∑–æ–≤–æ–≤
function debounce(func, delay) {
    let timeoutId;
    return function (...args) {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(() => func.apply(this, args), delay);
    };
}

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —á–∞—Ç–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
function scrollToBottom() {
    if (messagesContainer) {
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
function formatDateTime(isoDate) {
    const date = new Date(isoDate);
    return date.toLocaleString("ru-RU", {
        hour: "2-digit",
        minute: "2-digit"
    });
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: 'long', 
        day: 'numeric'
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function loadUserInfo(userId) {
    return fetch(`/chat/user/${userId}`)
        .then(response => response.json())
        .then(data => {
            chatCache.set(`userData_${userId}`, data);
            
            if (currentChatUserId === userId) {
                userInfo.innerHTML = `<p>–ò–º—è: ${data.username}</p><p>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${formatDate(data.created_at)}</p>`;
            }
        });
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendMessage() {
    const messageText = messageInput.value.trim();

    if (!messageText || !currentChatUserId) return;

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–≤–µ—Ç–µ, –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º
    const replyData = currentReplyTo ? {
        id: currentReplyTo.id,
        sender: currentReplyTo.sender,
        text: currentReplyTo.text
    } : null;

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
    const messageId = `msg_${Date.now()}_${messageIdCounter++}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    socket.emit("send_message", { 
        message: messageText, 
        user_id: currentChatUserId,
        reply_to: replyData,
        message_id: messageId
    });

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –æ—Ç–º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –æ—Ç–≤–µ—Ç–∞
    messageInput.value = "";
    cancelReply();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É textarea –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    messageInput.style.height = '';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
function updateChatList(senderId, recipientId, message) {
    const chatItems = document.querySelectorAll("#chatList li");

    chatItems.forEach(item => {
        const userId = parseInt(item.getAttribute("data-user-id"));
        if (userId === senderId || userId === recipientId) {
            const lastMessageSpan = item.querySelector(".last-message");
            const timeElement = item.querySelector(".last-message-time");
            
            if (lastMessageSpan) {
                const truncatedMessage = message.length > 25 ? message.substring(0, 25) + '...' : message;
                lastMessageSpan.textContent = truncatedMessage;
            }
            
            if (timeElement) {
                timeElement.textContent = new Date().toLocaleTimeString('ru-RU', {hour: '2-digit', minute:'2-digit'});
            }
            
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —á–∞—Ç —Å –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤–≤–µ—Ä—Ö —Å–ø–∏—Å–∫–∞
            const parent = item.parentElement;
            if (parent.firstChild !== item) {
                parent.insertBefore(item, parent.firstChild);
            }
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function fixMessagesOrder() {
    const messages = Array.from(document.querySelectorAll('.message'));
    
    // –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º–µ–Ω—å—à–µ 2 —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞
    if (messages.length < 2) return;
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–µ
    messages.sort((a, b) => {
        const timestampA = new Date(a.getAttribute('data-timestamp'));
        const timestampB = new Date(b.getAttribute('data-timestamp'));
        return timestampA - timestampB;
    });
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    messagesContainer.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    messages.forEach(msg => {
        messagesContainer.appendChild(msg);
    });
}

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ new_message
if (socket) {
    socket.on("new_message", handleNewMessage);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ —á–∞—Ç–æ–≤
const searchInput = document.getElementById("searchChats");
if (searchInput) {
    searchInput.addEventListener("input", debounce(function() {
        const searchTerm = this.value.toLowerCase();
        const chatItems = document.querySelectorAll("#chatList li");
        
        chatItems.forEach(item => {
            const username = item.querySelector(".chat-text b").textContent.toLowerCase();
            const lastMessage = item.querySelector(".last-message").textContent.toLowerCase();
            
            if (username.includes(searchTerm) || lastMessage.includes(searchTerm)) {
                item.style.display = "flex";
            } else {
                item.style.display = "none";
            }
        });
    }, 300));
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
if (backButton) {
    backButton.addEventListener("click", () => {
        sidebar.classList.add('active');
        mainChat.classList.remove('active');
        if (showChats) updateActiveNav(showChats);
    });
}

if (showChats) {
    showChats.addEventListener("click", () => {
        sidebar.classList.add('active');
        mainChat.classList.remove('active');
        profileSidebar.classList.remove('active');
        updateActiveNav(showChats);
    });
}

if (showMessages) {
    showMessages.addEventListener("click", () => {
        sidebar.classList.remove('active');
        mainChat.classList.add('active');
        profileSidebar.classList.remove('active');
        updateActiveNav(showMessages);
    });
}

if (showProfile) {
    showProfile.addEventListener("click", () => {
        sidebar.classList.remove('active');
        mainChat.classList.remove('active');
        profileSidebar.classList.add('active');
        updateActiveNav(showProfile);
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
const closeProfile = document.getElementById("closeProfile");
if (closeProfile) {
    closeProfile.addEventListener("click", () => {
        profileSidebar.classList.remove('active');
        mainChat.classList.add('active');
        if (showMessages) updateActiveNav(showMessages);
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∞–≤–∏—à - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Shift+Enter
messageInput.addEventListener("keydown", (event) => {
    if (event.key === "Enter" && !event.shiftKey) {
        event.preventDefault();
        sendMessage();
    }
    // –ï—Å–ª–∏ Shift+Enter, —Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É (–±—Ä–∞—É–∑–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ textarea
function setupAutoResizeTextarea() {
    const textarea = messageInput;
    if (!textarea) return;
    
    function autoResize() {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É, —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ–≤—É—é
        textarea.style.height = 'auto';
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤—ã—Å–æ—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        const newHeight = Math.min(textarea.scrollHeight, 120); // –ú–∞–∫—Å–∏–º—É–º 120px
        textarea.style.height = `${newHeight}px`;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã—Å–æ—Ç—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        if (window.innerWidth < 768) {
            if (messagesContainer) {
                const inputHeight = Math.max(70, newHeight); // –ú–∏–Ω–∏–º—É–º 70px
                messagesContainer.style.maxHeight = `calc(100vh - 130px - 60px - ${inputHeight}px)`;
            }
        }
    }
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞
    textarea.addEventListener('input', autoResize);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É
    setTimeout(autoResize, 0);
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—ã—Å–æ—Ç—ã
    const originalSendMessage = sendMessage;
    sendMessage = function() {
        originalSendMessage();
        setTimeout(() => {
            textarea.style.height = '';
            if (window.innerWidth < 768) {
                if (messagesContainer) {
                    messagesContainer.style.maxHeight = '';
                }
            }
        }, 0);
    };
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
sendMessageBtn.addEventListener("click", sendMessage);

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å—Ä–∞–∑—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
loadChatList();
setInterval(loadChatList, 30000);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
function initChatInterface() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ URL —Å chat_id
    const chatPath = window.location.pathname.match(/\/chat\/(\d+)/);
    
    // –ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ 
    if (window.innerWidth >= 768) {
        // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä
        sidebar.classList.add('active');
        
        // –ï—Å–ª–∏ URL —Å–æ–¥–µ—Ä–∂–∏—Ç chat_id –∏–ª–∏ –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç
        if (chatPath || lastSelectedUserId) {
            mainChat.classList.add('active');
            
            if (chatPath) {
                const chatId = chatPath[1];
                openChatById(chatId);
            } else if (lastSelectedUserId) {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç
                const cachedUserData = chatCache.get(`userData_${lastSelectedUserId}`);
                if (cachedUserData) {
                    selectChat(lastSelectedUserId, cachedUserData.username, cachedUserData.avatar);
                }
            }
        }
    } else {
        // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–π–¥–±–∞—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        sidebar.classList.add('active');
    }
}

// –í—ã–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initChatInterface();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ textarea
setupAutoResizeTextarea();

// –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', function() {
    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (window.innerWidth >= 768) {
        // –ö–æ–º–ø—å—é—Ç–µ—Ä: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä –∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        sidebar.classList.add('active');
        if (currentChatUserId) {
            mainChat.classList.add('active');
            profileSidebar.classList.add('active');
            
            // –¢–∞–∫–∂–µ —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤–∏–¥–Ω–∞ –æ–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø–æ–ª–µ –≤–≤–æ–¥–∞
            messageInputContainer.classList.add('active');
            
            // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
            setTimeout(() => {
                scrollToBottom();
            }, 100);
        }
    } else {
        // –ú–æ–±–∏–ª—å–Ω—ã–µ: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        if (mainChat.classList.contains('active')) {
            sidebar.classList.remove('active');
            profileSidebar.classList.remove('active');
        } else if (profileSidebar.classList.contains('active')) {
            sidebar.classList.remove('active');
            mainChat.classList.remove('active');
        } else {
            sidebar.classList.add('active');
            mainChat.classList.remove('active');
            profileSidebar.classList.remove('active');
        }
    }
});
});