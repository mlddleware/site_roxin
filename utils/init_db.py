import os
import logging
from database.connection import DatabaseConnection

logger = logging.getLogger(__name__)

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –≤—Å–µ—Ö —Å—Ö–µ–º"""
    try:
        with DatabaseConnection() as conn:
            with conn.cursor() as cursor:
                # –°–ø–∏—Å–æ–∫ SQL —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
                sql_files = [
                    'database/init_schema.sql',
                    'database/support_tables.sql',
                    'database/admin_panel_schema.sql',
                    'database/user_bans_schema.sql',
                    'database/password_reset_schema.sql'
                ]
                
                for sql_file in sql_files:
                    if os.path.exists(sql_file):
                        logger.info(f"–í—ã–ø–æ–ª–Ω—è—é {sql_file}...")
                        with open(sql_file, 'r', encoding='utf-8') as f:
                            sql_content = f.read()
                            # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ç–æ—á–∫–µ —Å –∑–∞–ø—è—Ç–æ–π –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç–¥–µ–ª—å–Ω–æ
                            statements = [stmt.strip() for stmt in sql_content.split(';') if stmt.strip()]
                            for statement in statements:
                                try:
                                    cursor.execute(statement)
                                except Exception as e:
                                    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ "already exists"
                                    if "already exists" not in str(e).lower():
                                        logger.warning(f"–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ: {e}")
                        logger.info(f"‚úÖ {sql_file} –≤—ã–ø–æ–ª–Ω–µ–Ω")
                    else:
                        logger.warning(f"‚ö†Ô∏è –§–∞–π–ª {sql_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
                conn.commit()
                logger.info("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
                
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        raise

if __name__ == "__main__":
    init_database() 